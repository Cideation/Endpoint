#!/usr/bin/env python3
"""
Startup script for Neon Unified Interface
Demonstrates 1-Way Compute Architecture: Structured + Spatial â†’ Node Engine â†’ Controlled Emergence
"""

import uvicorn
import sys
from pathlib import Path

# Add the current directory to Python path
sys.path.append(str(Path(__file__).parent))

if __name__ == "__main__":
    print("ðŸ§  Starting Neon Unified Interface - 1-Way Compute Architecture")
    print("=" * 70)
    print("")
    print("ðŸŽ¯ Architecture Overview:")
    print("   â€¢ Cosmetic UI (Left) â†’ Structured inputs â†’ Node Engine")
    print("   â€¢ Spatial Environment (Right) â†’ Spatial actions â†’ Node Engine")
    print("   â€¢ Node Engine â†’ Controlled emergence â†’ Both environments")
    print("")
    print("ðŸš€ Interface URLs:")
    print("   â€¢ Unified Interface: http://localhost:8001")
    print("   â€¢ Legacy Interface: http://localhost:8001/legacy")
    print("   â€¢ API Documentation: http://localhost:8001/docs")
    print("   â€¢ Engine Status: http://localhost:8001/api/v2/engine/status")
    print("")
    print("ðŸŽ® Features:")
    print("   â€¢ Agent Sign-Up Form (Your original requirement)")
    print("   â€¢ 3D Spatial Environment with clickable components")
    print("   â€¢ Real-time Node Engine processing visualization")
    print("   â€¢ Unified event stream showing all inputs â†’ emergence")
    print("   â€¢ WebSocket updates for real-time synchronization")
    print("")
    print("ðŸ§© How to Test:")
    print("   1. Fill out Agent Sign-Up form â†’ Watch emergence in 3D")
    print("   2. Click 3D components â†’ See structured events generated")
    print("   3. Use spatial buttons â†’ Observe Node Engine processing")
    print("   4. All inputs flow through same engine â†’ Unified emergence")
    print("")
    print("âœ… Ready for frontend user discussions!")
    print("   This demonstrates the 2-way interactive feel from 1-way compute!")
    print("")
    
    uvicorn.run(
        "unified_api_server:app",
        host="0.0.0.0",
        port=8001,
        reload=True,
        log_level="info"
    ) 